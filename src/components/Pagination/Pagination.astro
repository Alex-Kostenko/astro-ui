---
import { formatLink } from "@utils/format.link";
import type { Page } from "astro";
import PaginationButton from "./PaginationButton.astro";
import { ChevronLeft, ChevronRight } from "@assets/icon";

interface Props {
  href: string;
  toBlock?: string;
  paginate: Page;
  size?: number;
}

const { paginate, href, toBlock, size = 3 } = Astro.props;
const { page } = Astro.params;

const currentPage = paginate.currentPage;
const lastPage = paginate.lastPage;

const pages = [];
let rangeStart = Math.max(1, currentPage - 1);
let rangeEnd = Math.min(lastPage, currentPage + 1);

if (currentPage === 1 || currentPage === 2) {
  rangeEnd = Math.min(lastPage, 3);
}

if (currentPage === lastPage || currentPage === lastPage - 1) {
  rangeStart = Math.max(1, lastPage - 2);
}

if (rangeStart > 1) {
  pages.push(1);
  if (rangeStart > 2) {
    const target = currentPage - size;
    pages.push({ label: "...", target: target <= 0 ? 1 : target });
  }
}

for (let i = rangeStart; i <= rangeEnd; i++) {
  pages.push(i);
}

if (rangeEnd < lastPage) {
  if (rangeEnd < lastPage - 1) {
    pages.push({ label: "...", target: currentPage + size });
  }
  pages.push(lastPage);
}

const formatPageLink = (target: number) => {
  return formatLink(Astro.url, href) + target + (toBlock ? `#${toBlock}` : "");
};
---

<section class="py-2 flex gap-y-3 flex-wrap justify-between items-center">
  <PaginationButton
    href={paginate?.url?.prev &&
      paginate?.url?.prev + (toBlock ? `#${toBlock}` : "")}
    class="order-1"
  >
    <ChevronLeft />
  </PaginationButton>

  <section
    class="sm:order-2 flex gap-x-4 sm:gap-x-6 w-full sm:w-auto justify-center"
  >
    {
      pages.map((v) => {
        if (typeof v === "object") {
          return (
            <PaginationButton
              href={formatPageLink(v.target)}
              class="hidden sm:block px-0"
            >
              {v.label}
            </PaginationButton>
          ); // Пропуск
        }
        return (
          <PaginationButton
            href={formatPageLink(v)}
            active={page === v.toString()}
            class="min-w-10 px-0"
          >
            {v}
          </PaginationButton>
        );
      })
    }
  </section>
  <PaginationButton
    href={paginate?.url?.next &&
      paginate?.url?.next + (toBlock ? `#${toBlock}` : "")}
    class="order-3"
  >
    <ChevronRight />
  </PaginationButton>
</section>
