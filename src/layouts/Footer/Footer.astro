---
import { AccordionAstro } from '@components/Accordion';
import { TypographyAstro } from '@components/Typography';
import { clutch, linkedin, youtube } from '@assets/index';
import FooterHero from './FooterHero.astro';
import { useTranslations, type Languages } from '@i18n/index';
import { routes } from 'src/routes';
import { formatLink } from '@utils/format.link';
import serviceService from '@service/service.service';
import projectService from '@service/project.service';
import insightService from '@service/insight.service';
import vacancyService from '@service/vacancy.service';

interface Props {
  variant?: 'contained' | 'outlined';
  color?: 'black' | 'biscuit';
  class?: string;
}

const { lang } = Astro.params;
const t = useTranslations(lang as Languages, 'footer');

const { data: services } = await serviceService.getServicePreview({
  locale: lang as Languages,
});

const { data: cases } = await projectService.getDomains({
  locale: lang as Languages,
});

const { data: insights } = await insightService.getCategory({
  locale: lang as Languages,
});

const { data: vacancies } = await vacancyService.get({
  locale: lang as Languages,
});

const data = [
  {
    header: t('menu.services'),
    items: services.map((item) => ({
      label: item.name,
      link: formatLink(Astro.url, routes.service + '/' + item.slug),
    })),
  },
  {
    header: t('menu.cases'),
    items: cases.map((item) => ({
      label: item.name,
      link: formatLink(Astro.url, routes.cases + '/' + item.slug + '/1'),
    })),
  },
  {
    header: t('menu.about'),
    items: [
      {
        label: 'Sustainable Technologies',
        link: formatLink(Astro.url, routes.whoWeAre + '#mission'),
      },
      {
        label: 'Our story and values',
        link: formatLink(Astro.url, routes.whoWeAre + '#values'),
      },
      {
        label: 'How we work',
        link: formatLink(Astro.url, routes.whoWeAre + '#services'),
      },
      {
        label: 'Testimonials',
        link: formatLink(Astro.url, routes.whoWeAre + '#testimonials'),
      },
    ],
  },
  {
    header: t('menu.insights'),
    items: [
      {
        label: t('menu.allInsights'),
        link: formatLink(Astro.url, routes.allInsights),
      },
      ...insights.map((item) => ({
        label: item.name,
        link: formatLink(Astro.url, routes.insight + '/' + item.slug + '/1'),
      })),
    ],
  },
  {
    header: t('menu.careers'),
    items: vacancies.map((item) => ({
      label: item.title,
      link: formatLink(Astro.url, routes.careers + '/' + item.slug),
    })),
  },
];
---

<footer class='pt-[120px]'>
  <section class:list={['min-h-dvh', 'grid grid-rows-[1fr,auto]']}>
    <FooterHero />

    <div class='bg-brand-black'>
      <div
        class:list={[
          'w-full',
          'py-10 px-6 2xl:pb-16 2xl:px-0',
          'mx-auto 2xl:max-w-[1216px]',
        ]}
      >
        <div class='hidden 2xl:flex justify-between mb-[60px]'>
          {
            data.map((textBlock) => {
              return (
                <div>
                  <TypographyAstro
                    type='body-2'
                    color='white'
                    class='font-gothic mb-5 tracking-0.8'
                  >
                    {textBlock.header}
                  </TypographyAstro>
                  <div class='flex flex-col gap-y-2'>
                    {textBlock.items.map((item) => (
                      <p class='text-gray-200 font-gothic text-12 cursor-pointer'>
                        <a href={item.link}>{item.label}</a>
                      </p>
                    ))}
                  </div>
                </div>
              );
            })
          }
        </div>
        <div class='2xl:hidden mb-6'>
          {
            data.map((textBlock) => {
              return (
                <AccordionAstro arrowStyle>
                  <p
                    class='text-brand-white font-gothic tracking-0.8'
                    slot='title'
                  >
                    {textBlock.header}
                  </p>
                  <ul class='ist-inside text-12 list-none space-y-2 mb-2'>
                    {textBlock.items.map((item) => {
                      return (
                        <li class='text-gray-200 font-gothic text-16 tracking-0.8 uppercase'>
                          <a href={item.link}>{item.label}</a>
                        </li>
                      );
                    })}
                  </ul>
                </AccordionAstro>
              );
            })
          }
        </div>
        <div
          class:list={['flex flex-col justify-between gap-y-4', '2xl:flex-row']}
        >
          <div class='flex sm2:mb-0 gap-x-4 2xl:gap-x-3'>
            <img src={clutch.src} alt='clutch' />
            <img src={linkedin.src} alt='linkedin' />
            <img src={youtube.src} alt='youtube' />
          </div>
          <div
            class:list={[
              'flex gap-y-2 flex-col',
              '2xl:gap-x-6 2xl:flex-row',
              'text-gray font-gothic text-10 leading-3',
            ]}
          >
            <p>{t('copyright').replace('$year', new Date().getFullYear())}</p>
            <a href={formatLink(Astro.url, routes.privacyPolicy)}
              >{t('privacyPolicy')}</a
            >
            <a href={formatLink(Astro.url, routes.terms)}
              >{t('termsOfService')}</a
            >
          </div>
        </div>
      </div>
    </div>
  </section>
</footer>
