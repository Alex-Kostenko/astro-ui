---
import type { GetStaticPaths } from "astro";
import Layout from "@layouts/Layout.astro";
import { languages, type Language, type Languages } from "@i18n/ui";
import vacancyService from "@service/vacancy.service";
import { cubeNear, cubeNearVP9 } from "@assets/video";
import Breadcrumbs from "@components/Breadcrumbs/Breadcrumbs.astro";
import { VacancyTitle, VacancyDescription } from "@components/Sections/Vacancy";
import ContactUsSection from "@components/Form/ContactUsSection.astro";
import { useTranslations } from "@i18n/utils";
import Recruiter from "@components/Sections/Vacancy/Recruiter.astro";

export const getStaticPaths = (async () => {
  const req = Object.keys(languages).flatMap((lang) =>
    vacancyService.getWithInfo({ locale: languages[lang].lang }).then((res) => {
      return {
        lang: languages[lang] as Language,
        res,
      };
    }),
  );

  const resArr = await Promise.all(req);

  return resArr.flatMap((res) => {
    return res.res.data.map((v) => {
      return {
        params: { lang: res.lang.slug, slug: v.slug },
        props: { vacancy: v },
      };
    });
  });
}) satisfies GetStaticPaths;

const { lang } = Astro.params;
const { vacancy } = Astro.props;

const pageDescription = vacancy.skills.map((skill) => skill.name).join(", ");

const t = useTranslations(lang as Languages, "vacancy");
---

<Layout
  title={vacancy.title}
  openGraph={{
    image: vacancy.image.base64,
    title: vacancy.title,
    description: pageDescription,
  }}
>
  <main class="flex flex-col gap-[120px]">
    <div class="h-[144px] lg:h-[168px] bg-black bg-opacity-45">
      <video
        autoplay
        muted
        loop
        class="relative -z-10 bg-black bg-opacity-45 h-full w-full object-cover"
      >
        <track kind="captions" src="/captions/empty_captions.vtt" />
        <source src={cubeNear} type="video/mp4; codecs=avc1.42E01E,mp4a.40.2" />
        <source src={cubeNearVP9} type="video/mp4" />
      </video>
      <Breadcrumbs last={vacancy.title} />
    </div>
    <VacancyTitle title={vacancy.title} />
    <VacancyDescription list={vacancy.description} />
    <Recruiter recruiter={vacancy.recruiter} />
    <ContactUsSection text={t("contactUs")} table="vacancy-replay" />
  </main>
</Layout>
