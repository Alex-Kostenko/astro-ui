---
interface Props {
  variant?: "contained" | "outlined";
  color?: "black" | "biscuit";
  class?: string;
  asLink?: boolean;
  href?: string;
  type?: "button" | "submit" | "reset";
}

const {
  color = "black",
  variant = "contained",
  class: className,
  href = "#",
  asLink = false,
  type = "button",
} = Astro.props;

const Tag = asLink ? "a" : "button";
---

<Tag
  class:list={[
    "min-h-11 min-w-11 px-4 py-3 rounded box-border font-gothic700 flex justify-center gap-x-2",
    "uppercase text-center font-bold text-base leading-tight cursor-pointer",
    "duration-200",
    {
      "bg-brand-white text-green":
        variant === "contained" && color === "biscuit",
      "text-green border-2 border-green hover:border-greenLight-200 focus:border-green-500 ":
        variant === "outlined" && color === "biscuit",
      "hover:bg-greenLight-200  focus:bg-green-300 focus:text-brand-white":
        color === "biscuit",
    },
    {
      "bg-brand-black text-brand-white hover:bg-green-100 focus:bg-green-500":
        variant === "contained" && color === "black",
    },
    className,
  ]}
  {...asLink ? { href } : { type }}
>
  <slot />
</Tag>
