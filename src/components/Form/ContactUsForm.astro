---
import { ButtonAstro } from "@components/Button";
import { TextField } from "@components/TextField";
import FilePicker from "./FilePicker.astro";
import CheckBox from "./CheckBox.astro";
import { useTranslations, type Languages } from "@i18n/index";
import { Toast } from "@components/Toast";

const { lang } = Astro.params;
const t = useTranslations(lang as Languages, "formContactUs");
---

<section
  class:list={[
    "bg-brand-black bg-opacity-85 px-4 md:px-[60px] 2xl:px-[120px] py-10 xl:py-8",
    "flex flex-col gap-x-8 gap-y-8 xl:flex-row clip after:hidden md:after:block",
  ]}
>
  <div class="flex-grow xl:w-1/2 mt-auto md:px-16 lg:px-0">
    <h3 class="text-brand-beigeLight font-gothic uppercase text-20">
      {t("title")}
    </h3>
  </div>

  <form
    id="form-contac-us"
    class:list={["flex-grow w-full xl:max-w-[480px]", "flex flex-col gap-y-5"]}
  >
    <div class="flex flex-col gap-y-4">
      <TextField placeholder={t("nameLabel")} name="name" />
      <TextField placeholder={t("emailLabel")} type="email" name="email" />
      <TextField placeholder={t("messageLabel")} name="message" />
    </div>

    <div class="flex items-center gap-x-2">
      <FilePicker
        name="file"
        titleBtn={t("file.button")}
        label={t("file.label")}
        accept=".pdf"
      />
    </div>

    <CheckBox name="consent">
      <p class="text-14 font-gothic text-brand-white">
        {t("consent.start")}
        <a href="#" class="underline" target="_blank">{t("consent.terms")}</a>
        {t("consent.divider")}
        <a href="#" class="underline" target="_blank">
          {t("consent.privacyPolicy")}
        </a>
      </p>
    </CheckBox>
    <Toast type="success">
      <p slot="toast-content">Success</p>
      <ButtonAstro
        slot="toast-trigger"
        color="biscuit"
        class="w-full"
        type="submit"
      >
        {t("submitBtn")}
      </ButtonAstro>
    </Toast>
  </form>
</section>

<script>
  import { actions } from "astro:actions";
  const form = document.querySelector("#form-contac-us") as HTMLFormElement;
  form?.addEventListener("submit", async (event) => {
    event.preventDefault();

    const formData = new FormData(form);
    const consent = formData.get("consent");
    const file = formData.get("file") as File;
    const entries = Array.from(formData.entries());

    const toast = document.getElementById("toast");

    if (!consent || file.size <= 0 || entries.some((v) => !v[1])) {
      toast?.classList.remove("info", "success");
      toast?.classList.add("error");
      return;
    }

    const { error, data } = await actions.contactUs(formData);
    console.log("error", error);

    if (data?.success) {
      toast?.classList.remove("info", "error");
      toast?.classList.add("success");
      form.reset();
    }

    form.reset();
  });
</script>

<style>
  .clip {
    position: relative;
    /* clip-path: polygon(17% 0, 100% 0, 100% 100%, 0 100%, 0 9%); */
  }
  .clip::after {
    content: "";
    position: absolute;
    top: -1px;
    left: -1px;
    width: 0;
    height: 0;
    border-right: 80px solid transparent;
    border-top: 60px solid #f3f3ef;
  }
</style>
