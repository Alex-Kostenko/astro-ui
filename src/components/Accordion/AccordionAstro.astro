---
import { DownArrow, UpArrow } from "src/assets";
interface Props {
  open?: boolean;
  arrowStyle?: boolean;
}

const { open = false, arrowStyle = false } = Astro.props;
---

{
  !arrowStyle && (
    <accordion-block open={open + ""}>
      <div class="border-b border-black box-border">
        <button class="w-full py-6 text-slate-800 text-start">
          <slot name="title" />
        </button>
        <div
          id="content"
          class="max-h-0 overflow-hidden transition-all duration-300 ease-in-out"
        >
          <div class="pb-6 w-full">
            <slot />
          </div>
        </div>
      </div>
    </accordion-block>
  )
}
{
  arrowStyle && (
    <accordion-block open={open + ""}>
      <div>
        <button class="w-full py-2 text-biscuit text-start font-gothic tracking-[0.8px] font-normal text-base">
          <div class="flex justify-between ">
            <slot name="title" />
            <DownArrow class="down-arrow text-brand-white my-auto" />
            <UpArrow class="up-arrow hidden text-brand-white text-opacity-50 my-auto" />
          </div>
        </button>
        <div
          id="content"
          class="max-h-0 overflow-hidden transition-all duration-300 ease-in-out"
        >
          <div class="pt-1 w-full">
            <slot />
          </div>
        </div>
      </div>
    </accordion-block>
  )
}

<script>
  class Accordion extends HTMLElement {
    connectedCallback() {
      const open = this.getAttribute("open");
      const arrowStyle = this.getAttribute("arrowStyle");

      const button = this.querySelector("button");
      const content = this.querySelector("#content") as HTMLDivElement;
      const downArrow = arrowStyle ? this.querySelector(".down-arrow") as HTMLImageElement : null;
      const upArrow = arrowStyle ? this.querySelector(".up-arrow") as HTMLImageElement : null;

      if (open === "true") {
        content.style.maxHeight = content.scrollHeight + "px";
      }

      button?.addEventListener("click", () => {
        const content = this.querySelector("#content") as HTMLDivElement;
        if (!content || !content.style) return;

        const open = this.getAttribute("open");

        if (open === "true") {
          content.style.maxHeight = 0 + "px";
          this.setAttribute("open", "false");
          downArrow && downArrow.classList.remove("hidden");
          upArrow && upArrow.classList.add("hidden");
        } else {
          content.style.maxHeight = content.scrollHeight + "px";
          this.setAttribute("open", "true");
          downArrow && downArrow.classList.add("hidden");
          upArrow && upArrow.classList.remove("hidden");
        }
      });
    }
  }

  customElements.define("accordion-block", Accordion);
</script>
